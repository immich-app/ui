name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  tofu_version: '1.10.2'
  tg_version: '0.83.0'
  ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Mise
        uses: immich-app/devtools/actions/use-mise@cd24790a7f5f6439ac32cc94f5523cb2de8bfa8c # use-mise-action-v1.1.0

      - name: Run npm install
        run: pnpm -r install

      - name: Run build
        run: pnpm build

      - name: Upload build output
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: build-output
          path: packages/ui/build
          retention-days: 1

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    env:
      TF_VAR_stage: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || '' }}
      OP_SERVICE_ACCOUNT_TOKEN: ${{ github.ref == 'refs/heads/main' && secrets.OP_TF_PROD_ENV || secrets.OP_TF_DEV_ENV }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: 'Get build artifact'
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: 'build-output'
          path: '${{ github.workspace }}/build'

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@f5d505685ccf986ef535da41cd180792c8ac3a36 # v2

      - name: Install Terragrunt
        uses: eLco/setup-terragrunt@2c5116f8979bb261072ef57c97ac026cd9c27434 # v1
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: 'Install OpenTofu'
        uses: opentofu/setup-opentofu@000eeb8522f0572907c393e8151076c205fdba1b # v1
        with:
          tofu_version: ${{ env.tofu_version }}
          tofu_wrapper: false

      - name: Deploy All
        working-directory: ${{ github.workspace }}/deployment
        run: op run --env-file=".env" -- terragrunt run --all apply --non-interactive

      - name: Cloudflare Deploy Output
        id: deploy-output
        working-directory: ${{ github.workspace }}/deployment/modules/cloudflare/static-pages
        run: |
          echo "output=$(op run --no-masking --env-file='../../../.env' -- terragrunt output -json | jq -c .)" >> $GITHUB_OUTPUT

      - name: Publish Frontend to Cloudflare Pages
        uses: cloudflare/pages-action@f0a1cd58cd66095dee69bfa18fa5efd1dde93bca # v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN_PAGES_UPLOAD }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ fromJson(steps.deploy-output.outputs.output).pages_project_name.value }}
          directory: 'build'
          branch: ${{ fromJson(steps.deploy-output.outputs.output).pages_branch.value }}
          wranglerVersion: '3'

      - name: Comment
        uses: actions-cool/maintain-one-comment@4b2dbf086015f892dcb5e8c1106f5fccd6c1476b # v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          number: ${{ github.event.number }}
          body: |
            ðŸ“– Preview of ui.immich.app deployed to [${{ fromJson(steps.deploy-output.outputs.output).immich_subdomain.value }}](https://${{ fromJson(steps.deploy-output.outputs.output).immich_subdomain.value }})
          emojis: 'rocket'
          body-include: '<!-- ui PR URL -->'
